% \iffalse meta-comment
%
% Copyright (C) 2019--2021 by Philipp Tempel <latex@philipptempel.me>
% -------------------------------------------------------
%
% This file may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in:
%
%    http://www.latex-project.org/lppl.txt
%
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
% \fi
%
% \iffalse
%<*driver>
\ProvidesFile{philipptempel-todo.dtx}
%</driver>
%<pre-package>\NeedsTeXFormat{LaTeX2e}[2005/12/01]%
%<pre-package>\ProvidesPackage{philipptempel-todo}[%
%<package>Philipp Tempel ToDo]%
%
%<*driver>
\documentclass{ltxdoc}
\usepackage{hyperref}
\usepackage{philipptempel-todo}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
  \DocInput{philipptempel-todo.dtx}
  \PrintChanges
  \PrintIndex
\end{document}
%</driver>
% \fi
%
% \CheckSum{0}
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%
% \changes{v1.0}{2021/01/22}{Initial version}
%
% \GetFileInfo{philipptempel-todo.dtx}
%
% \DoNotIndex{%
%   \",%
%   \@,%
%   \color,%
%   \currname,%
%   \else,%
%   \expandafter,%
%   \fi,%
%   \IfNoValueTF,%
%   \ifx,%
%   \let,%
%   \newcommand,%
%   \NewDocumentCommand,%
%   \PassOptionsToPackage,%
%   \pgfkeys,%
%   \pgfkeyscurrentname,%
%   \pgfkeyscurrentvalue,%
%   \pgfkeysgetvalue,%
%   \pgfkeysifdefined,%
%   \pgfkeyslet,%
%   \pgfkeysnovalue,%
%   \pgfkeysvalueof,%
%   \pgfqkeys,%
%   \ProcessPgfPackageOptions,%
%   \providecommand,%
%   \ProvideDocumentCommand,%
%   \RequirePackage,%
%   \textbf,%
%   \textregistered,%
%   \textsuperscript,%
%   \texttrademark,%
%   \todo,%
%   \xspace,%
% }
%
%
% \title{The \textsf{philipptempel-todo} package\thanks{This document
%   corresponds to \textsf{philipptempel-todo}~\fileversion, dated \filedate.}}
% \author{Philipp Tempel \\ \texttt{latex@philipptempel.me}}
%
% \maketitle
%
% \section{Introduction}
%
% \section{Usage}
%
% Just use the macros and environments defined further down.
%
% \StopEventually{}
%
%
% \section{Implementation}
%<*package>
%
% \subsection{Package Dependencies}
%
% The package is a toolbox of programming facilities geared primarily towards
% LaTeX class and package authors. It provides LaTeX frontends to some of the
% new primitives provided by e-TeX as well as some generic tools which are not
% strictly related to e-TeX but match the profile of this package. Note that the
% initial versions of this package were released under the name elatex. The
% package provides functions that seem to offer alternative ways of implementing
% some LaTeX kernel commands; nevertheless, the package will not modify any part
% of the LaTeX kernel.
%    \begin{macrocode}
\RequirePackage{etoolbox}
%    \end{macrocode}
%
% xparse – A generic document command parser.\\
% The package provides a high-level interface for producing document-level
% commands. In that way, it offers a replacement for LaTeX2e’s |\newcommand|
% macro, with significantly improved functionality.\\
% The package is distributed as part of the l3packages bundle.
%    \begin{macrocode}
\RequirePackage{xparse}
%    \end{macrocode}
%
% xspace – Define commands that appear not to eat spaces.\\
% The xspace package provides a single command that looks at what comes after it
% in the command stream, and decides whether to insert a space to replace one
% "eaten" by the TeX command decoder. The decision is based on what came after
% any space, not on whether there was a space (which is unknowable): so if the
% next thing proves to be punctuation, the chances are there was no space, but
% if it's a letter, there's probably a need for space. This technique is not
% perfect, but works in a large proportion of cases.\\
% The package is part of the latex-tools bundle in the LaTeX required distribution.
%    \begin{macrocode}
\RequirePackage{xspace}
%    \end{macrocode}
%
% todonotes – Marking things to do in a \LaTeX document
% The package lets the user mark things to do later, in a simple and visually
% appealing way. The package takes several options to enable customization/
% finetuning of the visual appearance.
%    \begin{macrocode}
\RequirePackage{todonotes}
%    \end{macrocode}
%
%
% \subsection{PGF Keys Configuration}
%
% The pgfkeys package (part of the pgf distribution) is a well-designed way of
% defining and using large numbers of keys for key-value syntaxes. However,
% pgfkeys itself does not offer means of handling LaTeX class and package
% options. This package adds such option handling to pgfkeys, in the same way
% that kvoptions adds the same facility to the LaTeX standard keyval package.
%    \begin{macrocode}
\RequirePackage{pgfkeys}
\RequirePackage{pgfopts}
%    \end{macrocode}
%
% \begin{macro}{\pgfphilipptempeltextset}
% \cmd{\pgfphilipptempeltextset}\marg{key list}.\\
% Wrapper around |\pgfqkeys{/philipptempel/todo}{#1}|
%    \begin{macrocode}
\NewDocumentCommand{\pgfphilipptempeltextset}{ m }{%
  \pgfqkeys{/philipptempel/todo}{#1}%
}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\pgfphilipptempeltextlet}
% \cmd{\pgfphilipptempeltextlet}\marg{full key}\marg{macro}.\\
% Wrapper around |\pgfkeyslet{/philipptempel/todo/#1}{#2}|
%    \begin{macrocode}
\NewDocumentCommand{\pgfphilipptempeltextlet}{ m m }{%
  \pgfkeyslet{/philipptempel/todo/#1}{#2}%
}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\pgfphilipptempeltextvalueof}
% \cmd{\pgfphilipptempeltextvalueof}\marg{full key}.\\
% Wrapper around |\pgfkeysvalueof{/philipptempel/todo/#1}|
%    \begin{macrocode}
\NewDocumentCommand{\pgfphilipptempeltextvalueof}{ m }{%
  \pgfkeysvalueof{/philipptempel/todo/#1}%
}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\pgfphilipptempeltextgetvalue}
% \cmd{\pgfphilipptempeltextgetvalue}\marg{full key}\marg{macro}.\\
% Wrapper around |\pgfkeysgetvalue{/philipptempel/todo/#1}{#2}|
%    \begin{macrocode}
\NewDocumentCommand{\pgfphilipptempeltextgetvalue}{ m m }{%
  \pgfkeysgetvalue{/philipptempel/todo/#1}{#2}%
}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\pgfphilipptempeltextresetstyle}
% \cmd{\pgfphilipptempeltextresetstyle}\marg{fullkey}.\\
% Wrapper around |\pgfqkeys{/philipptempel/todo/#1/.style}{{}}|
%    \begin{macrocode}
\NewDocumentCommand{\pgfphilipptempeltextresetstyle}{ m }{%
  \pgfqkeys{/philipptempel/todo/#1/.style}{{}}%
}%
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\pgfphilipptempeltextifdefined}
% \cmd{\pgfphilipptempeltextifdefined}\marg{full key}\marg{if}\marg{else}.\\
% Wrapper around |\pgfkeysifdefined{/philipptempel/todo/#1}{#2}{#3}|
%    \begin{macrocode}
\NewDocumentCommand{\pgfphilipptempeltextifdefined}{ m m m }{%
  \pgfkeysifdefined{/philipptempel/todo/#1}{#2}{#3}%
}%
%    \end{macrocode}
% \end{macro}
%
%
% \subsection{Package Options}
%
% Configure the |pgfopts|-package
%    \begin{macrocode}
\pgfkeys{%
  /philipptempel/todo/.is family,%
  /philipptempel/todo/.cd,%
}
%    \end{macrocode}
%
% And now a callback for unknown options to be passed down to the
% |glossaries-extra| class
%    \begin{macrocode}
\pgfkeys{%
  /philipptempel/todo/.cd,%
    .unknown/.code={%
      \let\currname\pgfkeyscurrentname%
      \let\currval\pgfkeyscurrentvalue%
      \ifx#1\pgfkeysnovalue%
        \PassOptionsToPackage{\currname}{glossaries-extra}%
      \else%
        \PassOptionsToPackage{\expandafter\currname\expandafter=\currval}{glossaries-extra}%
      \fi%
    },%
}
%    \end{macrocode}
%
% Setting default values for options
%    \begin{macrocode}
\newcommand{\philipptempel@text@setdefaults}{%
  \pgfkeys{/philipptempel/todo/.cd,%
  }%
}%
%    \end{macrocode}
%
% Process options passed to the class
%    \begin{macrocode}
\philipptempel@text@setdefaults
\ProcessPgfPackageOptions{/philipptempel/todo}
%    \end{macrocode}
%
%
%
% \section{Macros}
%
% \begin{macro}{\comment}
% \cmd{\comment} Place a blue-colored todo note with text
% ``\textbf{Comment!}'' using the |todonotes| package.\\
% \cmd{\comment}\marg{text} Put |<text>| inside the todo notes and use
% ``\textbf{Comment!}'' as box caption.\\
% \cmd{\comment}\oarg{args}\marg{text} Pass additional style arguments |<args>|
% to the underlying |\todo[]{}| call. This can be used to also override the
% |caption| option.
%    \begin{macrocode}
\ProvideDocumentCommand{\comment}{ s O{} g }{
  \IfNoValueTF{#3}{%
    \todo[%
        color=Blue!40,%
        bordercolor=Blue,%
        #2%
      ]{\textbf{Comment!}}%
  }{%
    \todo[%
        color=Blue!40,%
        bordercolor=Blue,%
        prepend,%
        caption={\textbf{Comment!}},%
        #2%
      ]{\color{White}{#3}}%
  }%
  \xspace%
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\addref}
% \cmd{\addref} Place an orange-colored todo note with text
% ``\textbf{Add Reference!}'' using the |todonotes| package.\\
% \cmd{\addref}\marg{text} Put |<text>| inside the todo notes and use
% ``\textbf{Add Reference!}'' as box caption.\\
% \cmd{\addref}\oarg{args}\marg{text} Pass additional style arguments |<args>|
% to the underlying |\todo[]{}| call. This can be used to also override the
% |caption| option.
%    \begin{macrocode}
\ProvideDocumentCommand{\addref}{ s O{} g }{
  \IfNoValueTF{#3}{%
    \todo[%
        color=Orange!40,%
        bordercolor=Orange,%
        #2%
      ]{\textbf{Add Reference!}}%
  }{%
    \todo[%
        color=Orange!40,%
        bordercolor=Orange,%
        prepend,%
        caption={\textbf{Add Reference!}},%
        #2%
      ]{#3}%
  }%
  \xspace%
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\rewrite}
% \cmd{\rewrite} Place a green-colored todo note with text
% ``\textbf{Rewrite!}'' using the |todonotes| package.\\
% \cmd{\rewrite}\marg{text} Put |<text>| inside the todo notes and use
% ``\textbf{Rewrite!}'' as box caption.\\
% \cmd{\rewrite}\oarg{args}\marg{text} Pass additional style arguments |<args>|
% to the underlying |\todo[]{}| call. This can be used to also override the
% |caption| option.
%    \begin{macrocode}
\ProvideDocumentCommand{\rewrite}{ s O{} g }{%
  \IfNoValueTF{#3}{%
    \todo[%
        color=Green!40,%
        bordercolor=Green,%
        #2%
      ]{\textbf{Rewrite!}}%
  }{%
    \todo[%
        color=Green!40,%
        bordercolor=Green,%
        prepend,%
        caption={\textbf{Rewrite!}},%
        #2%
      ]{#3}%
  }%
  \xspace%
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\amend}
% \cmd{\amend} Place a purple-colored todo note with text
% ``\textbf{Amend!}'' using the |todonotes| package.\\
% \cmd{\amend}\marg{text} Put |<text>| inside the todo notes and use
% ``\textbf{Amend!}'' as box caption.\\
% \cmd{\amend}\oarg{args}\marg{text} Pass additional style arguments |<args>|
% to the underlying |\todo[]{}| call. This can be used to also override the
% |caption| option.
%    \begin{macrocode}
\ProvideDocumentCommand{\amend}{ s O{} g }{%
  \IfNoValueTF{#3}{%
    \todo[%
        color=Purple!40,%
        bordercolor=Purple,%
        #2%
      ]{\textbf{Amend!}}%
  }{%
    \todo[%
        color=Purple!40,%
        bordercolor=Purple,%
        prepend,%
        caption={\textbf{Amend!}},%
        #2%
      ]{\color{White}{#3}}%
  }%
  \xspace%
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\correct}
% \cmd{\correct} Place a red-colored todo note with text
% ``\textbf{Needs Correction!}'' using the |todonotes| package.\\
% \cmd{\correct}\marg{text} Put |<text>| inside the todo notes and use
% ``\textbf{Needs Correction!}'' as box caption.\\
% \cmd{\correct}\oarg{args}\marg{text} Pass additional style arguments |<args>|
% to the underlying |\todo[]{}| call. This can be used to also override the
% |caption| option.
%    \begin{macrocode}
\ProvideDocumentCommand{\correct}{ s O{} g }{%
  \IfNoValueTF{#3}{%
    \todo[%
        color=Red!40,%
        bordercolor=Red,%
        #2%
      ]{\textbf{Needs Correction!}}%
  }{%
    \todo[%
        color=Red!40,%
        bordercolor=Red,%
        prepend,%
        caption={\textbf{Needs Correction!}},%
        #2%
      ]{\color{White}{#3}}%
  }%
  \xspace%
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\talkabout}
% \cmd{\talkabout}\marg{text} Put |<text>| inside the todo notes and use
% ``\textbf{Talk about!}'' as box caption.\\
% \cmd{\addtalkaboutref}\oarg{args}\marg{text} Pass additional style arguments |<args>|
% to the underlying |\todo[]{}| call. This can be used to also override the
% |caption| option.
%    \begin{macrocode}
\ProvideDocumentCommand{\talkabout}{ s O{} m }{%
  \todo[%
      color=Gray!40,%
      bordercolor=Gray,%
      inline,%
      prepend,%
      caption={\textbf{Talk about}},%
      #2%
    ]{{#3}}%
  \xspace%
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\question}
% \cmd{\question} Place a magenta-colored todo note with text
% ``\textbf{Question?}'' using the |todonotes| package.\\
% \cmd{\question}\marg{text} Put |<text>| inside the todo notes and use
% ``\textbf{Question?}'' as box caption.\\
% \cmd{\question}\oarg{args}\marg{text} Pass additional style arguments |<args>|
% to the underlying |\todo[]{}| call. This can be used to also override the
% |caption| option.
%    \begin{macrocode}
\ProvideDocumentCommand{\question}{ s O{} g }{%
  \IfNoValueTF{#3}{%
    \todo[%
        color=Magenta!70,%
        bordercolor=Magenta,%
        #2%
      ]{\textbf{Question?}}%
  }{%
    \todo[%
        color=Magenta!70,%
        bordercolor=Magenta,%
        prepend,%
        caption={\textbf{Question?}},%
        #2%
      ]{\color{White}{#3}}%
  }%
  \xspace%
}
%    \end{macrocode}
% \end{macro}
%
%
%    \begin{macrocode}
\endinput
%    \end{macrocode}
%</package>
%\Finale
